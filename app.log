[2022-06-25T02:52:08.489] [DEBUG] default - Debug
[2022-06-25T02:52:31.187] [DEBUG] default - Debug
[2022-06-25T02:52:46.072] [INFO] default - Hello world! my first log4js test
[2022-06-25T02:52:46.076] [DEBUG] default - logging debug
[2022-06-25T02:52:46.076] [WARN] default - logging warning
[2022-06-25T02:52:46.077] [ERROR] default - logging error
[2022-06-25T02:53:25.288] [DEBUG] default - Debug
[2022-06-25T02:53:28.782] [INFO] default - Hello world! my first log4js test
[2022-06-25T02:53:28.786] [DEBUG] default - logging debug
[2022-06-25T02:53:28.786] [WARN] default - logging warning
[2022-06-25T02:53:28.787] [ERROR] default - logging error
[2022-06-25T02:53:40.629] [INFO] default - Hello world! my first log4js test
[2022-06-25T02:53:40.633] [DEBUG] default - logging debug
[2022-06-25T02:53:40.634] [WARN] default - logging warning
[2022-06-25T02:53:40.634] [ERROR] default - logging error
[2022-06-25T02:55:53.667] [INFO] default - Hello world! my first log4js test
[2022-06-25T02:55:53.671] [DEBUG] default - logging debug
[2022-06-25T02:55:53.672] [WARN] default - logging warning
[2022-06-25T02:55:53.672] [ERROR] default - logging error
[2022-06-25T12:32:11.899] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:32:12.204] [DEBUG] default - logging debug
[2022-06-25T12:32:12.204] [WARN] default - logging warning
[2022-06-25T12:32:12.205] [ERROR] default - logging error[2022-06-25T12:37:53.858] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:37:53.862] [DEBUG] default - logging debug
[2022-06-25T12:37:53.863] [WARN] default - logging warning
[2022-06-25T12:37:53.863] [ERROR] default - logging error
[2022-06-25T12:38:29.860] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:38:29.864] [DEBUG] default - logging debug
[2022-06-25T12:38:29.865] [WARN] default - logging warning
[2022-06-25T12:38:29.865] [ERROR] default - logging error
[2022-06-25T12:40:05.751] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:40:05.755] [DEBUG] default - logging debug
[2022-06-25T12:40:05.756] [WARN] default - logging warning
[2022-06-25T12:40:05.757] [ERROR] default - logging error
[2022-06-25T12:41:21.807] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:41:21.811] [DEBUG] default - logging debug
[2022-06-25T12:41:21.811] [WARN] default - logging warning
[2022-06-25T12:41:21.812] [ERROR] default - logging error
[2022-06-25T12:42:05.716] [INFO] default - 123
[2022-06-25T12:42:23.889] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:42:23.893] [DEBUG] default - logging debug
[2022-06-25T12:42:23.893] [WARN] default - logging warning
[2022-06-25T12:42:23.894] [ERROR] default - logging error
[2022-06-25T12:42:25.990] [INFO] default - { email: 'gesga2@ef.seg', password: '123123123' }
[2022-06-25T12:53:29.227] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:53:29.231] [DEBUG] default - logging debug
[2022-06-25T12:53:29.231] [WARN] default - logging warning
[2022-06-25T12:53:29.232] [ERROR] default - logging error
[2022-06-25T12:53:49.568] [INFO] default - { email: 'gesga2@ef.seg', password: '123123123' }
[2022-06-25T12:54:26.306] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:54:26.310] [DEBUG] default - logging debug
[2022-06-25T12:54:26.311] [WARN] default - logging warning
[2022-06-25T12:54:26.311] [ERROR] default - logging error
[2022-06-25T12:54:53.779] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:54:53.783] [DEBUG] default - logging debug
[2022-06-25T12:54:53.783] [WARN] default - logging warning
[2022-06-25T12:54:53.784] [ERROR] default - logging error
[2022-06-25T12:56:09.699] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:56:09.715] [DEBUG] default - logging debug
[2022-06-25T12:56:09.716] [WARN] default - logging warning
[2022-06-25T12:56:09.716] [ERROR] default - logging error
[2022-06-25T12:56:28.206] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:56:28.210] [DEBUG] default - logging debug
[2022-06-25T12:56:28.210] [WARN] default - logging warning
[2022-06-25T12:56:28.211] [ERROR] default - logging error
[2022-06-25T12:56:34.253] [INFO] default - { email: 'gesga2@ef.seg', password: '123123123' }
[2022-06-25T12:56:58.774] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:56:58.779] [DEBUG] default - logging debug
[2022-06-25T12:56:58.779] [WARN] default - logging warning
[2022-06-25T12:56:58.780] [ERROR] default - logging error
[2022-06-25T12:57:04.453] [ERROR] default - <ref *2> ServerResponse {
  _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
  _eventsCount: 1,
  _maxListeners: undefined,
  outputData: [],
  outputSize: 0,
  writable: true,
  destroyed: false,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  maxRequestsOnConnectionReached: false,
  _defaultKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  _closed: false,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6:::1:8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 619,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1191,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 614,
        [Symbol(triggerId)]: 144
      },
      [Symbol(kUniqueHeaders)]: null
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6:::1:8080',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 619,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1191,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 614,
        [Symbol(triggerId)]: 144
      },
      [Symbol(kUniqueHeaders)]: null
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [IncomingMessage],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [Circular *2],
    [Symbol(async_id_symbol)]: 630,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: false,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _header: null,
  _keepAliveTimeout: 5000,
  _onPendingData: [Function: bound updateOutgoingData],
  req: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: true,
      errored: null,
      closed: true,
      closeEmitted: true,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: true,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *2],
      [Symbol(async_id_symbol)]: 630,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Content-Type',
      'application/json',
      'User-Agent',
      'PostmanRuntime/7.29.0',
      'Accept',
      '*/*',
      'Postman-Token',
      '78879880-41bb-45e2-a9b9-8625a7cf3fdc',
      'Host',
      'localhost:8080',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Connection',
      'keep-alive',
      'Content-Length',
      '70',
      'Cookie',
      'Auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdlc2dhMkBlZi5zZWciLCJpYXQiOjE2NTYxNTA5OTR9.mmsZZ1Sb1Td4UK3Q8SFXbzaYKF7Rk_8X_UxVpCp4Kzs'
    ],
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/users/login',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *2],
      [Symbol(async_id_symbol)]: 630,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/users/login',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/users/login',
      path: '/users/login',
      href: '/users/login',
      _raw: '/users/login'
    },
    params: {},
    query: {},
    res: [Circular *2],
    secret: undefined,
    cookies: {
      Auth: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdlc2dhMkBlZi5zZWciLCJpYXQiOjE2NTYxNTA5OTR9.mmsZZ1Sb1Td4UK3Q8SFXbzaYKF7Rk_8X_UxVpCp4Kzs'
    },
    signedCookies: [Object: null prototype] {},
    body: { email: 'gesga2@ef.seffffg', password: '123123123' },
    _body: true,
    length: undefined,
    route: Route { path: '/users/login', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      'content-type': 'application/json',
      'user-agent': 'PostmanRuntime/7.29.0',
      accept: '*/*',
      'postman-token': '78879880-41bb-45e2-a9b9-8625a7cf3fdc',
      host: 'localhost:8080',
      'accept-encoding': 'gzip, deflate, br',
      connection: 'keep-alive',
      'content-length': '70',
      cookie: 'Auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdlc2dhMkBlZi5zZWciLCJpYXQiOjE2NTYxNTA5OTR9.mmsZZ1Sb1Td4UK3Q8SFXbzaYKF7Rk_8X_UxVpCp4Kzs'
    },
    [Symbol(kHeadersCount)]: 18,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  },
  _sent100: false,
  _expect_continue: false,
  locals: [Object: null prototype] {},
  [Symbol(kCapture)]: false,
  [Symbol(kNeedDrain)]: false,
  [Symbol(corked)]: 0,
  [Symbol(kOutHeaders)]: [Object: null prototype] {
    'x-powered-by': [ 'X-Powered-By', 'Express' ],
    'access-control-allow-origin': [ 'Access-Control-Allow-Origin', 'http://localhost:3000' ],
    vary: [ 'Vary', 'Origin' ],
    'access-control-allow-credentials': [ 'Access-Control-Allow-Credentials', 'true' ]
  },
  [Symbol(kUniqueHeaders)]: null
}
[2022-06-25T12:57:32.085] [INFO] default - Hello world! my first log4js test
[2022-06-25T12:57:32.089] [DEBUG] default - logging debug
[2022-06-25T12:57:32.089] [WARN] default - logging warning
[2022-06-25T12:57:32.090] [ERROR] default - logging error
[2022-06-25T12:57:32.796] [ERROR] default - 123123123
[2022-06-25T12:57:58.211] [ERROR] default - 123123123
[2022-06-25T12:58:00.584] [ERROR] default - 123123123
[2022-06-25T12:58:04.939] [INFO] default - { email: 'gesga2@ef.seg', password: '123123123' }
[2022-06-25T12:58:37.844] [ERROR] default - 123123123
[2022-06-25T12:58:37.847] [DEBUG] default - 123123123
[2022-06-25T12:58:52.943] [ERROR] default - 123123123
[2022-06-25T12:58:52.947] [DEBUG] default - 123123123
[2022-06-25T12:58:52.948] [WARN] default - 123123123
[2022-06-25T13:02:15.918] [INFO] default - { email: 'sfddsg@ef.ges', password: '123123123' }
[2022-06-25T13:03:16.332] [INFO] default - { email: 'sfddsg@ef.ges', password: '123123123' }
[2022-06-28T12:05:04.337] [INFO] default - Hello world! my first log4js test
[2022-06-28T12:05:05.117] [DEBUG] default - logging debug
[2022-06-28T12:05:05.117] [WARN] default - logging warning
[2022-06-28T12:05:05.118] [ERROR] default - logging error
[2022-06-28T12:05:24.486] [INFO] default - Hello world! my first log4js test
[2022-06-28T12:05:24.489] [DEBUG] default - logging debug
[2022-06-28T12:05:24.490] [WARN] default - logging warning
[2022-06-28T12:05:24.490] [ERROR] default - logging error
[2022-06-28T12:05:40.632] [INFO] default - Hello world! my first log4js test
[2022-06-28T12:05:40.636] [DEBUG] default - logging debug
[2022-06-28T12:05:40.637] [WARN] default - logging warning
[2022-06-28T12:05:40.637] [ERROR] default - logging error
[2022-06-28T12:05:50.945] [INFO] default - Hello world! my first log4js test
[2022-06-28T12:05:50.949] [DEBUG] default - logging debug
[2022-06-28T12:05:50.949] [WARN] default - logging warning
[2022-06-28T12:05:50.950] [ERROR] default - logging error
[2022-06-28T12:05:58.210] [INFO] default - Hello world! my first log4js test
[2022-06-28T12:05:58.214] [DEBUG] default - logging debug
[2022-06-28T12:05:58.214] [WARN] default - logging warning
[2022-06-28T12:05:58.215] [ERROR] default - logging error
[2022-06-28T12:13:33.405] [INFO] default - Hello world! my first log4js test
[2022-06-28T12:13:33.409] [DEBUG] default - logging debug
[2022-06-28T12:13:33.409] [WARN] default - logging warning
[2022-06-28T12:13:33.410] [ERROR] default - logging error
[2022-06-28T12:13:33.411] [FATAL] default - fatal
[2022-06-28T12:13:50.386] [INFO] default - Hello world! my first log4js test
[2022-06-28T12:13:50.391] [DEBUG] default - logging debug
[2022-06-28T12:13:50.391] [WARN] default - logging warning
[2022-06-28T12:13:50.392] [ERROR] default - logging error
[2022-06-28T12:13:50.393] [FATAL] default - fatal
[2022-06-28T12:13:58.612] [INFO] default - Hello world! my first log4js test
[2022-06-28T12:13:58.616] [DEBUG] default - logging debug
[2022-06-28T12:13:58.616] [WARN] default - warn
[2022-06-28T12:13:58.617] [ERROR] default - error
[2022-06-28T12:13:58.617] [FATAL] default - fatal
[2022-06-28T12:14:12.257] [INFO] default - info
[2022-06-28T12:14:12.261] [DEBUG] default - debug
[2022-06-28T12:14:12.262] [WARN] default - warn
[2022-06-28T12:14:12.263] [ERROR] default - error
[2022-06-28T12:14:12.263] [FATAL] default - fatal
[2022-06-28T12:29:45.925] [INFO] default - info
[2022-06-28T12:29:45.929] [DEBUG] default - debug
[2022-06-28T12:29:45.930] [WARN] default - warn
[2022-06-28T12:29:45.930] [ERROR] default - error
[2022-06-28T12:29:45.931] [FATAL] default - fatal
[2022-06-28T12:30:35.323] [INFO] default - info
[2022-06-28T12:30:35.326] [DEBUG] default - debug
[2022-06-28T12:30:35.327] [WARN] default - warn
[2022-06-28T12:30:35.327] [ERROR] default - error
[2022-06-28T12:30:35.328] [FATAL] default - fatal
[2022-06-28T12:30:37.321] [INFO] default - userrrrrrrrrrr
[2022-06-28T12:30:43.669] [INFO] default - userrrrrrrrrrr
[2022-06-28T12:30:53.551] [INFO] default - info
[2022-06-28T12:30:53.555] [DEBUG] default - debug
[2022-06-28T12:30:53.556] [WARN] default - warn
[2022-06-28T12:30:53.557] [ERROR] default - error
[2022-06-28T12:30:53.557] [FATAL] default - fatal
